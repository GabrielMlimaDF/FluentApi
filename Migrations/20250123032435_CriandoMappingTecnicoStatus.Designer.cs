// <auto-generated />
using System;
using FluentMappingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluentMappingApi.Migrations
{
    [DbContext(typeof(ContextApp))]
    [Migration("20250123032435_CriandoMappingTecnicoStatus")]
    partial class CriandoMappingTecnicoStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluentMappingApi.Models.StatusAtivoInativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.HasKey("Id")
                        .HasName("PK_StatusAtivoInativo");

                    b.ToTable("StatusAtivoInativo", (string)null);
                });

            modelBuilder.Entity("FluentMappingApi.Models.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusAtivoInativoId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusAtivoInativoId");

                    b.ToTable("Tecnico");
                });

            modelBuilder.Entity("FluentMappingApi.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.HasKey("Id")
                        .HasName("PK_Tipo");

                    b.ToTable("Tipo", (string)null);
                });

            modelBuilder.Entity("FluentMappingApi.Models.Tecnico", b =>
                {
                    b.HasOne("FluentMappingApi.Models.StatusAtivoInativo", "StatusAtivoInativo")
                        .WithMany("Tecnico")
                        .HasForeignKey("StatusAtivoInativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tecnico_StatusAtivoInativo");

                    b.Navigation("StatusAtivoInativo");
                });

            modelBuilder.Entity("FluentMappingApi.Models.StatusAtivoInativo", b =>
                {
                    b.Navigation("Tecnico");
                });
#pragma warning restore 612, 618
        }
    }
}
